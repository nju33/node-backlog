var t,e=(t=require("axios"))&&"object"==typeof t&&"default"in t?t.default:t;const r=t=>e.create({baseURL:"https://geek.backlog.jp/api/v2/",params:{apiKey:t}});function s(t,e,r,s){return new(r||(r=Promise))(function(o,n){function i(t){try{c(s.next(t))}catch(t){n(t)}}function a(t){try{c(s.throw(t))}catch(t){n(t)}}function c(t){t.done?o(t.value):new r(function(e){e(t.value)}).then(i,a)}c((s=s.apply(t,e||[])).next())})}class o{constructor(t){this.axios=t}}class n extends o{getProjects(t={}){return s(this,void 0,void 0,function*(){try{return(yield this.axios.get("projects",{params:t})).data}catch(t){throw new Error(t.response.data.errors[0].message)}})}getProjectByProjectKey(t,e={}){return s(this,void 0,void 0,function*(){return(yield this.getProjects(e)).find(e=>e.projectKey===t)})}}class i extends o{getIssues(t={}){return s(this,void 0,void 0,function*(){try{return(yield this.axios.get("issues",{params:t})).data}catch(t){throw new Error(t.response.data.errors[0].message)}})}}class a extends o{getStatuses(){return s(this,void 0,void 0,function*(){try{return(yield this.axios.get("statuses")).data}catch(t){throw new Error(t.response.data.errors[0].message)}})}}exports.createAxiosInstance=r,exports.Backlog=class{constructor(t){this.config=t;const e=r(t.apiKey);this.status=new a(e),this.project=new n(e),this.issue=new i(e)}getStatuses(){return s(this,void 0,void 0,function*(){try{return this.status.getStatuses()}catch(t){throw new Error(t.response.data.errors[0].message)}})}getProjects(t={}){return s(this,void 0,void 0,function*(){try{return this.project.getProjects(t)}catch(t){throw new Error(t.response.data.errors[0].message)}})}getProjectByProjectKey(t,e={}){return s(this,void 0,void 0,function*(){return this.project.getProjectByProjectKey(t,e)})}getIssues(t){return s(this,void 0,void 0,function*(){try{return this.issue.getIssues(t)}catch(t){throw new Error(t.response.data.errors[0].message)}})}},exports.Issue=i,exports.Module=o,exports.Project=n,exports.Status=a;
//# sourceMappingURL=backlog.js.map
